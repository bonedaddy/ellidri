# ellidri configuration file
#
# All values except  domain  are optional.  All commented values show the
# defaults unless explicitly noted (e.g. examples).
#
# Defaults are chosen with security and compatibility in mind.  You can safely
# let the optional settings be and only tweak their value when needed.
#
# Example configuration:
#domain        irc.ellidri.org
#bind_to       0.0.0.0:6667
#bind_to       0.0.0.0:6697  /var/lib/ellidri/identity.p12
#org_name      Ellidri-Org
#org_location  Europe
#org_mail      Contact: support@ellidri.org
#motd_file     /etc/ellidri/motd.txt


# Domain of the IRC server (required)
#
# It is sent through most replies to clients as a prefix, and should be the same
# as the domain name of the server (not the IRC network).
domain  ellidri.localdomain


# Network bindings
#
# ellidri listens on these for incoming client connections.
#
# By default, ellidri will expect plain-text IRC connections on a binding.  If
# you need TLS, add the path to a [PKCS12] archive after the network address.
# If the path doesn't point to an existing PKCS12 archive, ellidri will create
# one from a self-signed certificate.
#
# [PKCS12]: https://en.wikipedia.org/wiki/PKCS_12
#
# If no binding is set, ellidri will listen on 0.0.0.0:6667 for plain-text
# connections, and on 0.0.0.0:6697 for TLS connections.  It will also query
# Let's Encrypt's ACME servers to get a valid certificate for the TLS endpoint.
#
# With OpenSSL, you can generate one from a certificate chain and a private key
# this way:
# openssl pkcs12 -export -out identity.pfx -inkey key.pem -in cert.pem [-certfile chain_certs.pem]
#
# An example configuration for TLS:
#bind_to   0.0.0.0:6697  identity.p12
#
# To accept only connections from localhost, in plain-text
#bind_to   127.0.0.1:6667


# Informations about the organization running the IRC server
#
# This information should be about the server, not the network.  It is sent to
# clients on demand.
#org_name      --unspecified--
#org_location  --unspecified--
#org_mail      --unspecified--


# The mode for new channels
#
# This must not contain mode parameters, for simplicity (e.g.  "+o admin" is
# rejected).  All modes must be known to ellidri.  The list of known modes is:
# - i: users must be invited to join the channel
# - m: only voiced users can talk in the channel
# - n: users must join the channel to send messages to it
# - s: the channel will not be visible to users from the outside
# - t: only channel operators can set its topic
#default_chan_mode  +nt


# The path to the MOTD file
#
# The Message Of The Day is sent to all new clients.  It can be changed at
# runtime with the `REHASH` message.
#motd_file  /etc/motd


# IRC operator accounts
#
# Define here the login/password pairs that are accepted by the `OPER` message.
#
# For example:
#oper  root ThisPasswordShouldProbablyBeHashedInTheNextVersionsOfEllidri
#oper  modr NotRoot


# Server password
#
# This password will be needed for client to be able to log on the server.
# ellidri will expect them to send it in a PASS command.
#
# For example:
#password My password can't be this cute!


# SASL support
#
# ellidri supports several backends for SASL, each of them implement several
# SASL methods.  The list of backend is the following:
#
# - `none` (default): disable SASL
# - `db`: SQL database backend.  Supports PLAIN.  You must configure `db_url` if
#   you choose this backend.
#sasl_backend  none


# Database URL (optional, required if `sasl_backend` is set to `db`)
#
# Specify the URL to the database ellidri should use for SASL.
# The value must follow the format <driver>://<url>
#
# Supported drivers:
# - sqlite
# - postgres (aliases: psql, postgresql)
#
# For sqlite, the url is the path to the file.  In-memory databases are not supported.
#
# For postgres, the url must follow the key-value format specified at:
# <https://docs.rs/postgres/0.17.0/postgres/config/struct.Config.html>
#
# Examples:
#db_url  sqlite://ellidri.db
#db_url  sqlite:///var/lib/ellidri/ellidri.db
#db_url  postgres://host=/run/postgresql,localhost database=ellidri sslmode=prefer


# Misc settings


# Number of worker threads
#
# Worker threads handle incoming connections and messages.  If set to 0, ellidri
# will use the number of CPU on the machine.
#workers  0


# User input limits

# Away message length limit
#awaylen 300

# Channel name length limit
#channellen 50

# Kick message length limit
#keylen 24

# Kick message length limit
#kicklen 300

# Realname length limit
#namelen 64

# Nickname length limit
#nicklen 32

# Topic length limit
#topiclen 300

# Username length limit
#userlen 64


# Timeouts

# Login/registration timeout
#
# Number of milliseconds until the connection is closed if the client hasn't
# registered.
#login_timeout 60000
